openapi: 3.0.4
info:
  title: TARIFF
  description: Tariff Calculation System for UBS, by G2T3
  version: 1.0.0

servers:
  - url: https://api.example.com/api/v1

tags:
  - name: Tariff
    description: Everything about tariff
  - name: User
    description: Operations about user
  - name: Authentication
    description: Authentication operations

paths:
  /api/v1/auth/login:
    post:
      summary: Login with email and password
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequestDTO'
      responses:
        '200':
          description: Successful login, sets access & refresh tokens in cookies
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseDTO'
        '401':
          description: Bad request - Email does not exist OR Password is wrong (does not match email)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/logout:
    post:
      summary: Logout user
      tags: [Authentication]
      parameters:
        - name: refreshToken
          in: cookie
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully logged out
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseDTO'

  /api/v1/auth/refresh:
    post:
      summary: Refresh access token using refresh token
      tags: [Authentication]
      parameters:
        - name: refreshToken
          in: cookie
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully refreshed token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseDTO'
        '401':
          description: Refresh token has expired, hence frontend sent null value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/auth/.well-known/jwks.json:
    get:
      summary: Retrieve JWKS (JSON Web Key Set)
      tags: [Authentication]
      responses:
        '200':
          description: JWKS JSON
          content:
            application/json:
              schema:
                type: string

  /api/v1/users:
    post:
      summary: Create a new user
      tags: [User]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestDTO'
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponseDTO'
        '400':
          description: Bad request - validation errors or duplicate email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
# Skeleton placeholders for later
  /tariffs:
    get:
      summary: Placeholder for tariff operations
      tags: [Tariff]
      responses:
        '501':
          description: Not implemented

components:
  schemas:
    CreateUserRequestDTO:
      type: object
      required: [firstName, lastName, email, password, username]
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        username:
          type: string
        isAdmin:
          type: boolean

    LoginRequestDTO:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    GenericResponseDTO:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: object
        timestamp:
          type: string
          format: date-time

    RefreshLoginResponseDTO:
      type: object
      properties:
        userId:
          type: string
        fullName:
          type: string
        role:
          type: string
        jwt:
          type: string

    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string